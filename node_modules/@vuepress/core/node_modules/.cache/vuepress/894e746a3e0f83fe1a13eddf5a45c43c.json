{"remainingRequest":"C:\\Users\\fangjunrui\\Desktop\\vuepress-plugin-game\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\fangjunrui\\Desktop\\vuepress-plugin-game\\src\\game.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\fangjunrui\\Desktop\\vuepress-plugin-game\\src\\game.vue","mtime":1622017844693},{"path":"C:\\Users\\fangjunrui\\Desktop\\vuepress-plugin-game\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fangjunrui\\Desktop\\vuepress-plugin-game\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\fangjunrui\\Desktop\\vuepress-plugin-game\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\fangjunrui\\Desktop\\vuepress-plugin-game\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}